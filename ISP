//*************************************************************************
// Title : A java programme to demonstrate Interface Segregation Principle.
// Author : Snigdha Ferdousi,Student ID: 220203, Undergrduate student, Khulna University.
//*************************************************************************
/**
/**
 * Interface representing a batsman in cricket.
 */
interface Batsman {
    void bat();
}

/**
 * Interface representing a bowler in cricket.
 */
interface Bowler {
    void bowl();
}

/**
 * Interface representing an all-rounder in cricket.
 */
interface AllRounder extends Batsman, Bowler {
    void field();
}

/**
 * Class representing a cricket player.
 */
class CricketPlayer {
    protected String name;

    /**
     * Constructs a CricketPlayer object with the given name.
     * 
     * @param name The name of the player.
     */
    public CricketPlayer(String name) {
        this.name = name;
    }

    /**
     * Gets the name of the player.
     * 
     * @return The name of the player.
     */
    public String getName() {
        return name;
    }
}

/**
 * Class representing a batsman player.
 */
class BatsmanPlayer extends CricketPlayer implements Batsman {
    /**
     * Constructs a BatsmanPlayer object with the given name.
     * 
     * @param name The name of the batsman.
     */
    public BatsmanPlayer(String name) {
        super(name);
    }

    @Override
    public void bat() {
        System.out.println(getName() + " is batting.");
    }
}

/**
 * Class representing a bowler player.
 */
class BowlerPlayer extends CricketPlayer implements Bowler {
    /**
     * Constructs a BowlerPlayer object with the given name.
     * 
     * @param name The name of the bowler.
     */
    public BowlerPlayer(String name) {
        super(name);
    }

    @Override
    public void bowl() {
        System.out.println(getName() + " is bowling.");
    }
}

/**
 * Class representing an all-rounder player.
 */
class AllRounderPlayer extends CricketPlayer implements AllRounder {
    /**
     * Constructs an AllRounderPlayer object with the given name.
     * 
     * @param name The name of the all-rounder.
     */
    public AllRounderPlayer(String name) {
        super(name);
    }

    @Override
    public void bat() {
        System.out.println(getName() + " is batting.");
    }

    @Override
    public void bowl() {
        System.out.println(getName() + " is bowling.");
    }

    @Override
    public void field() {
        System.out.println(getName() + " is fielding.");
    }
}

/**
 * Main class to demonstrate the Interface Segregation Principle.
 */
public class Main {
    public static void main(String[] args) {
        // Create batsman
        BatsmanPlayer batsman = new BatsmanPlayer("Virat Kohli");
        batsman.bat();

        // Create bowler
        BowlerPlayer bowler = new BowlerPlayer("Jasprit Bumrah");
        bowler.bowl();

        // Create all-rounder
        AllRounderPlayer allRounder = new AllRounderPlayer("Ben Stokes");
        allRounder.bat();
        allRounder.bowl();
        allRounder.field();
    }
}
